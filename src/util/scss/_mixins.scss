//Media Query : --------------------
//1em = 16px

@mixin respond($breakpoint) {
  @if ($breakpoint == small-phone) {
    @media (max-width: 27em) {
      @content;
    }
  }
  @if ($breakpoint == phone) {
    @media (max-width: 37.5em) {
      @content;
    }
  }
  @if ($breakpoint == tab-port) {
    @media (max-width: 56.25em) {
      @content;
    }
  }
  @if ($breakpoint == tab-land) {
    @media (max-width: 75em) {
      @content;
    }
  }
  @if ($breakpoint == meduim-screen) {
    @media (max-width: 65em) and (orientation: portrait) {
      @content;
    }
  }
  @if ($breakpoint == big-desktop) {
    @media (min-width: 93em) {
      @content;
    }
  }
  @if ($breakpoint == big-big-desktop) {
    @media (min-width: 124em) {
      @content;
    }
  }
}

@mixin transition {
  &::after {
    content: "";
    position: absolute;
    border-bottom: 2px solid var(--color);
    bottom: 0;
    width: 0;
    transition: all 0.3s;
  }

  &:hover::after,
  &.active::after {
    width: 80%;
  }
}

@mixin gradientImage($image, $from-color, $to-color) {
  background-image: linear-gradient(to right bottom, $from-color, $to-color),
    url($image);
  background-size: cover;
  background-position: top;
}

@mixin centerElement {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.heading {
  color: var(--orange);
  text-transform: uppercase;
  &--primary {
    font-size: 7rem;
    @include respond(phone) {
      font-size: 4rem;
    }
    font-weight: 300;
    @include respond(phone) {
      font-weight: 400;
    }
    letter-spacing: 2.2rem;
  }
  &--sub {
    font-size: 2rem;
    font-weight: 300;
    letter-spacing: 0.15rem;
  }
  &--secondary {
    font-size: 3.5rem;
    text-transform: uppercase;
    font-weight: 400;
    letter-spacing: 0.15rem;
    text-align: center;
    color: var(--orange);
  }

  &--tertiary {
    margin-bottom: 1rem;
    color: var(--orange);
    font-size: 1.8rem;
    letter-spacing: 0.2rem;
  }
}
